[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 0,
  "modified": "2025-04-02 21:41:27.856539",
  "module": "Mhr",
  "name": "Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note', {\n    refresh(frm) {\n        console.log(cur_frm.fields_dict['items'].grid.data.length)\n        cur_frm.set_df_property('scan_barcode', 'hidden',1);\n        frm.set_df_property('currency_and_price_list', 'hidden',1);\n        frm.set_df_property('accounting_dimensions_section', 'hidden',1);\n\n        if (frm.doc.__islocal) {\n            frm.clear_table(\"items\");\n        }\n    },\n    custom_supplier_batch_no: function(frm){\n        fetch_and_append_batch(frm);\n        \n    },\n    custom_scan_batch_no: function(frm, cdt, cdn) {\n      \n       \n        // Check if the batch already exists in the items table\n        const existingRow = frm.doc.items.find(d => d.batch_no === frm.doc.custom_scan_batch_no);\n        if (existingRow) {\n            // If the batch already exists, notify the user and clear the field\n            frappe.msgprint(__(\"Batch already exists in the table\"));\n            frm.set_value(\"custom_scan_batch_no\", \"\");\n            frm.refresh_field(\"custom_scan_batch_no\");\n        }\n        else {\n            \n            // If the batch does not exist, make a server call to get the batch details\n            frappe.call({\n                method: \"mhr.utilis.get_item_batch\",\n                args: {\n                    batch:frm.doc.custom_scan_batch_no\n                },\n                callback: function(r) {\n                    if (r.message.error) {\n                        // If there is an error in the response, possibly handle it here\n                        return;\n                    }\n                    if (r.message) {\n                        \n                     if((r.message.glue).toLowerCase() !== (frm.doc.custom_glue).toLowerCase() ||\n                        (r.message.lusture).toLowerCase() !== (frm.doc.custom_lusture).toLowerCase() ||\n                        (r.message.grade).toLowerCase() !== (frm.doc.custom_grade).toLowerCase() ||\n                        (r.message.pulp).toLowerCase() !== (frm.doc.custom_pulp).toLowerCase() ||\n                        (r.message.fsc).toLowerCase() !== (frm.doc.custom_fsc).toLowerCase()\n                         ) { // Compare the lowercase values\n                            frappe.msgprint(__(\"Parameters are not the same as the value in batch\"));\n                            frm.set_value(\"custom_scan_batch_no\", \"\");\n                            frm.refresh_field(\"custom_scan_batch_no\");\n                        }\n                        else if(frm.doc.custom_cone && (r.message.cone) !== (frm.doc.custom_cone)){\n                             frappe.msgprint(__(\"Parameters are not the same as the value in batch\"));\n                            frm.set_value(\"custom_scan_batch_no\", \"\");\n                            frm.refresh_field(\"custom_scan_batch_no\");\n                        }\n                        else {\n                        frm.add_child(\"items\", {\n                            item_code: r.message.item_code,\n                            item_name: r.message.item_name,\n                            qty: r.message.qty,\n                            batch_no: r.message.batch_no,\n                            uom: r.message.uom,\n                            custom_cone: r.message.cone,\n                            custom_supplier_batch_no:r.message.supplier_batch_no,\n                            custom_container_no: r.message.container_no,\n                            custom_lot_no: r.message.lot_no,\n                            use_serial_batch_fields: 1\n                        });\n                        frm.doc.items.unshift(frm.doc.items.pop());\n                        frm.refresh_field(\"items\");\n                        frm.set_value(\"custom_scan_batch_no\", \"\");\n                        frm.refresh_field(\"custom_scan_batch_no\");\n                    }\n                    }\n                }\n            });\n        }\n        }\n    \n});\n\nfunction fetch_and_append_batch(frm) {\n    // Ensure both fields have values before making the call\n    if (frm.doc.custom_supplier_batch_no && frm.doc.custom_container_no && frm.doc.custom_lot_no) {\n        frappe.call({\n            method: \"mhr.utilis.get_delivery_note_batch\",\n            args: {\n                lot_no: frm.doc.custom_lot_no,\n                container_no: frm.doc.custom_container_no,\n                supplier_batch_no: frm.doc.custom_supplier_batch_no,\n                glue:frm.doc.custom_glue,\n                pulp:frm.doc.custom_pulp,\n                fsc:frm.doc.custom_fsc,\n                lusture: frm.doc.custom_lusture,\n                grade: frm.doc.custom_grade,\n                cone: frm.doc.custom_cone,\n                denier: frm.doc.custom_denier\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var data = response.message;\n\n                    // Check if the batch already exists in the child table\n                    var exists = frm.doc.items.some(function(row) {\n                        return row.batch_no === data.batch_no;  // Correct field name: 'batch_no'\n                    });\n\n                    if (!exists) {\n                        // Add a new row to the table with the correct field names\n                        let new_row = frm.add_child(\"items\", {\n                            item_code: data.item_code,\n                            item_name: data.item_name,\n                            qty: data.qty,\n                            batch_no: data.batch_no,  // Correct field name\n                            uom: data.uom,\n                            custom_cone: data.cone,\n                            custom_supplier_batch_no: data.supplier_batch_no,\n                            custom_container_no: data.container_no,\n                            custom_lot_no: data.lot_no,\n                            use_serial_batch_fields: 1\n                        });\n\n                        frm.doc.items.unshift(frm.doc.items.pop());  // Reorder the table if needed\n                        frm.refresh_field(\"items\");\n                        frm.set_value(\"custom_supplier_batch_no\", \"\");\n                        frm.refresh_field(\"custom_supplier_batch_no\");\n                    } else {\n                        frappe.msgprint(__('Batch already exists in the list.'));\n                    }\n                }\n            }\n        });\n        \n    }\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2024-06-19 15:56:53.073680",
  "module": "Mhr",
  "name": "Lot No",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n    refresh(frm) {\n        \n    },\n    //get batche if lot no is filled\n    custom_container_no: function(frm) {\n        itemShow = []\n            frappe.call({\n                method: \"mhr.utilis.get_lot_nos\",\n                args: {\n                    \"container_no\": frm.doc.custom_container_no\n                },\n                callback: function(r) {\n                    if(r.message){\n                        //set the  th eoptions fo rlot not\n                        frm.set_df_property('custom_lot_number', 'options', [r.message]);       \n                    }\n                }\n            });\n        \n    },\n    //get the lot no if container no is filled\n    custom_lot_number: function(frm) {\n        if(frm.doc.custom_container_no){\n            frappe.call({\n                method: \"mhr.utilis.get_batches\",\n                args: {\n                    \"container_no\": frm.doc.custom_container_no,\n                    \"lot_no\": frm.doc.custom_lot_number\n                },\n                callback: function(r) {\n                    if(r.message){\n                      //append the items to the table\n                        console.log(r.message);\n                        frm.doc.items = []\n                        $.each(r.message, function(i, d) {\n                            var item = {\n                                item_code: d.item,\n                                item_name: d.item,\n                                qty: d.batch_qty,\n                                rate: d.rate,\n                                amount: d.amount,\n                                uom: d.stock_uom,\n                                rate:200,\n                                price_list_rate:200,\n                                use_serial_batch_fields:1,\n                                batch_no: d.name,\n                                warehouse: \"Finished Goods - MC\",\n\n                                \n                            }\n                            frm.add_child(\"items\", item);\n                        });\n                        frm.refresh_field(\"items\");\n                }\n            }\n            \n            });\n        }\n    },\n    //a function to append the item to the table\n    \n  \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Batch",
  "enabled": 1,
  "modified": "2024-09-03 07:40:45.073531",
  "module": "Mhr",
  "name": "Unfreeze Field in batch",
  "script": "frappe.ui.form.on('Batch', {\n\trefresh(frm) {\n\t    frm.set_df_property(\"custom_container_no\", \"read_only\", 0)\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2024-10-11 18:39:40.252318",
  "module": "Mhr",
  "name": "Stock entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\n    custom_supplier_batch_no: function(frm) {\n        fetch_and_append_batch(frm);\n    },\n\n    custom_lot_no: function(frm) {\n        fetch_and_append_batch(frm);\n    }\n});\n\nfunction fetch_and_append_batch(frm) {\n    // Ensure both fields have values before making the call\n    if (frm.doc.custom_supplier_batch_no) {\n        frappe.call({\n            method: \"mhr.utilis.get_print_batch\",\n            args: {\n                lot_no: frm.doc.custom_lot_no,\n                container_no: frm.doc.custom_container_number,\n                supplier_batch_no: frm.doc.custom_supplier_batch_no,\n            },\n            callback: function(response) {\n                if (response.message) {\n                    console.log(response.message);\n                    var data = response.message;\n\n                    // Check if the batch already exists in the child table\n                    var exists = frm.doc.items.some(function(row) {\n                        return row.batch_no === data.batch;\n                    });\n\n                    if (!exists) {\n                        // Add a new row to the table\n                        var childTable = frm.add_child(\"items\");\n                        childTable.item_code = data.item\n                        childTable.batch_no = data.batch;\n                        childTable.custom_cone = data.cone;\n                        // childTable.batch_qty = data.batch_qty;\n                        \n                        // Move the newly added row to the top of the table\n                        // frm.doc.list_batches.unshift(frm.doc.list_batches.pop());\n                        \n                        frm.refresh_field(\"items\");\n                        frm.set_value(\"custom_supplier_batch_no\", \"\");  \n                    } else {\n                        frappe.msgprint(__('Batch already exists in the list.'));\n                    }\n                }\n            }\n        });\n    }\n}\n\n// frappe.ui.form.on('List Batches', {\n//     batch: function(frm, cdt, cdn) {\n//         var child = locals[cdt][cdn];\n//         // Check if the batch already exists in the child table\n//         var exists = frm.doc.items.some(function(row) {\n//             return row.batch === child.batch && row.name !== child.name;\n//         });\n\n//         if (exists) {\n//             frappe.msgprint(__('Batch already exists in the list.'));\n//             frappe.model.set_value(cdt, cdn, 'batch', '');\n//         }\n//     }\n// });\n",
  "view": "Form"
 }
]